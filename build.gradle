plugins {
	id "de.abas.esdk" version "1.2.0-SNAPSHOT"
	id 'com.github.kt3k.coveralls' version '2.8.2'
	id 'idea'
}

repositories {
	maven { url "https://registry.abas.sh/artifactory/abas.maven-public/" }
	maven {
		url "http://$NEXUS_HOST:$NEXUS_PORT/nexus/content/repositories/$NEXUS_NAME-SNAPSHOT"
		allowInsecureProtocol = true
	}
	maven {
		url "http://$NEXUS_HOST:$NEXUS_PORT/nexus/content/repositories/$NEXUS_NAME"
		allowInsecureProtocol = true
	}
}

esdk {
	app {
		name = "g30l0"
		vendorId = "ag"
		appId = "g30l0"
		shared = false
		workdirs = [ "ow1" ]
		infosystems = [ "IS.OW1.G30L0" ]
		tables = [ "Kunde" ]
		screens = [:]
		data = []
		enums = []
		namedTypes = []
		languages = "DA"
		essentialsVersions = ["2018r4-2018r4"]
	}

	abas {
		homeDir = ABAS_HOMEDIR
		clientDir = ABAS_CLIENTDIR
		clientId = ABAS_CLIENTID
		edpHost = EDP_HOST
		edpPort = EDP_PORT.toInteger()
		edpUser = EDP_USER
		edpPassword = EDP_PASSWORD
	}

	nexus {
		nexusHost = NEXUS_HOST
		nexusPort = NEXUS_PORT.toInteger()
		nexusRepoName = NEXUS_NAME
		nexusPassword = NEXUS_PASSWORD
		nexusVersion = NEXUS_VERSION
	}

	ssh {
		host = SSH_HOST
		port = SSH_PORT.toInteger()
		user = SSH_USER
		password = SSH_PASSWORD
		key = SSH_KEY
	}
	installType = "SSH"
}

task instrument(dependsOn: [classes, project.configurations.jacocoAnt]) {

	inputs.files classes.outputs.files
	File outputDir = new File(project.buildDir, 'instrumentedClasses')
	outputs.dir outputDir
	doFirst {
		project.delete(outputDir)
		ant.taskdef(
				resource: 'org/jacoco/ant/antlib.xml',
				classpath: project.configurations.jacocoAnt.asPath,
				uri: 'jacoco'
		)
		def instrumented = false
			if (file(sourceSets.main.java.outputDir).exists()) {
				def instrumentedClassedDir = "${outputDir}/${sourceSets.main.java}"
				ant.'jacoco:instrument'(destdir: instrumentedClassedDir) {
					fileset(dir: sourceSets.main.java.outputDir, includes: '**/*.class')
				}
				//Replace the classes dir in the test classpath with the instrumented one
				sourceSets.test.runtimeClasspath -= files(sourceSets.main.java.outputDir)
				sourceSets.test.runtimeClasspath += files(instrumentedClassedDir)
				instrumented = true
			}
		if (instrumented) {
			//Disable class verification based on https://github.com/jayway/powermock/issues/375
			test.jvmArgs += '-noverify'
		}
	}
}
test.dependsOn instrument

test {
	jacoco {
		excludes += ['**/*']
	}
}

coveralls {
	jacocoReportPath 'build/reports/jacoco/calculateCodeCoverage/calculateCodeCoverage.xml'
}

calculateCodeCoverage {
	reports {
		xml.enabled true
	}
	finalizedBy tasks.coveralls
}

group = 'de.abas.esdk.g30l0'

configurations { compile.extendsFrom provided }

dependencies {
	provided 'de.abas.homedir:log4j:1.0.0'
	provided "de.abas.homedir:abas-db-base:1.0.0"
	provided "de.abas.homedir:jedp:1.0.0"
	provided "de.abas.homedir:abas-jfop-runtime-api:1.0.0"
	provided "de.abas.homedir:abas-erp-common:1.0.0"
	provided "de.abas.homedir:abas-enums:1.0.0"

	implementation "de.abas.homedir:abas-axi2:1.0.0"
	implementation "de.abas.homedir:abas-axi:1.0.0"
	implementation "de.abas.homedir:abas-db-internal:1.0.0"
	implementation "de.abas.clientdir:abas-db:1.0.0-SNAPSHOT"
	implementation "de.abas.clientdir:abas-db-index:1.0.0-SNAPSHOT"
	implementation "de.abas.clientdir:abas-db-infosys:1.0.0-SNAPSHOT"
	implementation "fr.dudie:nominatim-api:3.4"

	runtimeOnly "de.abas.homedir:commons-collections:1.0.0"
	runtimeOnly "de.abas.homedir:abas-jfop-base:1.0.0"
	runtimeOnly "de.abas.homedir:jcl-over-slf4j:1.0.0"
	runtimeOnly "de.abas.homedir:slf4j-api:1.0.0"

	testImplementation "junit:junit:4.12"
	testImplementation "org.hamcrest:hamcrest-all:1.3"
	testImplementation "de.abas.esdk.test.util:esdk-test-utils:0.0.2"
	testImplementation "org.mockito:mockito-all:1.10.19"
	testImplementation "org.powermock:powermock-module-junit4:1.6.2"
	testImplementation "org.powermock:powermock-api-mockito:1.6.2"

	integTestRuntimeOnly "de.abas.homedir:abas-db-util:1.0.0"
}

idea {
	module {
		testSourceDirs += project.sourceSets.integTest.allSource.srcDirs
		testSourceDirs += project.sourceSets.integTest.resources.srcDirs
	}
}
